import React, { useState } from 'react';
import { useForm } from 'react-hook-form';
import axios from 'axios';
import './MenuManagement.css';

function MenuManagement() {
  const [menuItems, setMenuItems] = useState([]);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedItem, setSelectedItem] = useState(null);
  const {
    register,
    handleSubmit,
    setValue,
    formState: { errors },
  } = useForm();
  const fetchMenuItems = async () => {
    const response = await axios.get('/api/menuItems');
    setMenuItems(response.data);
  };

  const handleEditClick = (item) => {
    setSelectedItem(item);
    setIsModalOpen(true);

    for (const key in item) {
      setValue(key, item[key]);
    }
  };

  const handleDeleteClick = async (id) => {
    await axios.delete(`/api/menuItems/${id}`);
    fetchMenuItems();
  };

  const onSubmit = async (data) => {
    if (selectedItem) {
      await axios.put(`/api/menuItems/${selectedItem._id}`, data);
    } else {
      await axios.post('/api/menuItems', data);
    }
    setIsModalOpen(false);
    setSelectedItem(null);
    fetchMenuItems();
  };

  const closeModal = () => {
    setIsModalOpen(false);
    setSelectedItem(null);
  };


  return (
    <div className="menu-management">
      <h2>Menu Management</h2>
      <button className="btn btn-primary" onClick={() => setIsModalOpen(true)}>
        Add Menu Item
      </button>

      {menuItems.map((item) => (
        <div key={item._id} className="menu-item">
          <h3>{item.name}</h3>
          <p>{item.description}</p>
          <p>${item.price}</p>
          <button className="btn btn-warning" onClick={() => handleEditClick(item)}>
            Edit
          </button>
          <button className="btn btn-danger" onClick={() => handleDeleteClick(item._id)}>
            Delete
          </button>
        </div>
      ))}

      {isModalOpen && (
        <div className="modal">
          <div className="modal-content">
            <h2>{selectedItem ? 'Edit Menu Item' : 'Add Menu Item'}</h2>
            <form onSubmit={handleSubmit(onSubmit)}>
              <div className="form-group">
                <label htmlFor="name">Name</label>
                <input
                  type="text"
                  id="name"
                  {...register('name', { required: true })}
                  className="form-control"
                />
              </div>
              <div className="form-group">
                <label htmlFor="description">Description</label>
                <textarea
                  id="description"
                  {...register('description', { required: true })}
                  className="form-control"
                ></textarea>
              </div>
              <div className="form-group">
                <label htmlFor="price">Price</label>
                <input
                  type="number"
                  id="price"
                  {...register('price', { required: true })}
                  className="form-control"
                />
              </div>
              <div className="form-group">
                <label htmlFor="image">Image URL</label>
                <input
                  type="text"
                  id="image"
                  {...register('image')}
                  className="form-control"
                />
              </div>
              <button type="submit" className="btn btn-primary">
                {selectedItem ? 'Update' : 'Add'}
              </button>
              <button type="button" className="btn btn-secondary" onClick={closeModal}>
                Cancel
              </button>
            </form>
          </div>
        </div>
      )}
    </div>
  );
}

export default MenuManagement;

          
